// Generated by CoffeeScript 1.6.2
(function() {
  var Event, Simon, SimonUI;

  Event = (function() {
    function Event(name) {
      this.name = name;
      this.listeners = [];
    }

    Event.prototype.subscribe = function(callback) {
      return this.listeners.push(callback);
    };

    Event.prototype.fire = function() {
      var listener, _i, _len, _ref, _results;

      _ref = this.listeners;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        listener = _ref[_i];
        _results.push(listener());
      }
      return _results;
    };

    return Event;

  })();

  Simon = (function() {
    function Simon(btnCount) {
      this.btnCount = btnCount;
      this.wrongButton = new Event('wrongButton');
      this.correctButton = new Event('correctButton');
      this.patternComplete = new Event('patternComplete');
      this.pattern = [];
      this.userPattern = [];
    }

    Simon.prototype.start = function() {
      this.pattern = [];
      this.userPattern = [];
      return this.next();
    };

    Simon.prototype.next = function() {
      this.userPattern = [];
      return this.pattern.push(parseInt(Math.random() * this.btnCount));
    };

    Simon.prototype.handleButtonPress = function(btnId) {
      this.userPattern.push(btnId);
      if (this.userPattern[this.userPattern.length - 1] === this.pattern[this.userPattern.length - 1]) {
        if (this.userPattern.length === this.pattern.length) {
          this.next();
          return this.patternComplete.fire();
        } else {
          return this.correctButton.fire();
        }
      } else {
        return this.wrongButton.fire();
      }
    };

    return Simon;

  })();

  SimonUI = (function() {
    function SimonUI(buttons, game) {
      var button, idx, _i, _len, _ref;

      this.buttons = buttons;
      this.game = game;
      _ref = this.buttons;
      for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {
        button = _ref[idx];
        $(button).data('button-id', idx);
      }
      this._initListeners();
    }

    SimonUI.prototype._initListeners = function() {
      var self;

      self = this;
      this.buttons.on('click', function(evt) {
        var btnId;

        evt.preventDefault();
        btnId = $(this).data('button-id');
        return self.game.handleButtonPress(btnId);
      });
      this.game.wrongButton.subscribe(function() {
        return self.handleWrongButton();
      });
      return this.game.patternComplete.subscribe(function() {
        return self.handlePatternComplete();
      });
    };

    SimonUI.prototype.start = function() {
      this.game.start();
      return this.demoPattern(this.game.pattern);
    };

    SimonUI.prototype.handleButtonPress = function(btnNum) {
      return this.game.handleButtonPress(btnNum);
    };

    SimonUI.prototype.handleWrongButton = function() {
      return console.log('wrong button');
    };

    SimonUI.prototype.handleCorrectButton = function() {
      return console.log('correct');
    };

    SimonUI.prototype.handlePatternComplete = function() {
      console.log('pattern complete');
      return this.demoPattern(this.game.pattern);
    };

    SimonUI.prototype.demoPattern = function(pattern) {
      return console.log("next pattern is " + pattern);
    };

    return SimonUI;

  })();

  $(function() {
    var simon, simonUI;

    simon = new Simon(4);
    simonUI = new SimonUI($('.simon-button'), simon);
    return simonUI.start();
  });

}).call(this);
